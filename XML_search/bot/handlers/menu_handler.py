"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –±–æ—Ç–∞
"""

from typing import Optional, Any
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CommandHandler, ConversationHandler, CallbackQueryHandler, MessageHandler, filters
from XML_search.enhanced.db_manager import DatabaseManager
from XML_search.enhanced.metrics_manager import MetricsManager
from XML_search.enhanced.log_manager import LogManager
from XML_search.enhanced.cache_manager import CacheManager
from XML_search.enhanced.export.export_manager import ExportManager
from ..states import States
from .base_handler import BaseHandler
from .auth_handler import AuthHandler
from XML_search.bot.config import BotConfig
import logging

class MenuHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    
    def __init__(self, 
                 config: BotConfig,
                 db_manager: Optional[DatabaseManager] = None,
                 metrics: Optional[MetricsManager] = None,
                 auth_handler: Optional[AuthHandler] = None,
                 logger: Optional[LogManager] = None,
                 cache: Optional[CacheManager] = None,
                 export_manager: Optional[ExportManager] = None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –º–µ–Ω—é
        
        Args:
            config: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
            db_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            metrics: –°–±–æ—Ä—â–∏–∫ –º–µ—Ç—Ä–∏–∫
            auth_handler: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            logger: –ú–µ–Ω–µ–¥–∂–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            cache: –ú–µ–Ω–µ–¥–∂–µ—Ä –∫—ç—à–∞
            export_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä —ç–∫—Å–ø–æ—Ä—Ç–∞
        """
        super().__init__(config)
        self._db_manager = db_manager
        self.metrics = metrics or MetricsManager()
        self.auth_handler = auth_handler
        self.logger = logger or logging.getLogger(self.__class__.__module__)
        self.cache = cache or CacheManager(ttl=config.CACHE_TTL, max_size=config.CACHE_MAX_SIZE)
        self.export_manager = export_manager
        
        # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
        self.BUTTON_COORD_SEARCH = '–ü–æ–∏—Å–∫ –°–ö –ø–æ Lat/Lon'
        self.BUTTON_DESC_SEARCH = '–ü–æ–∏—Å–∫ –°–ö –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é'
        self.BUTTON_MENU = 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        
    async def _handle_update(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        
        Args:
            update: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
            
        Returns:
            States: –°–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            if not await self.auth_handler.check_auth(update, context):
                return States.AUTH
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await self.show_main_menu(update, context)
            return States.MAIN_MENU
            
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –≤ MenuHandler: {str(e)}")
            await self._handle_error(update, context, e)
            return States.ERROR
        
    async def show_main_menu(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """
        –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        
        Args:
            update: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        """
        user_id = update.effective_user.id
        self.logger.info(f"[MenuHandler.show_main_menu] user_id={user_id} ‚Äî –ø–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é")
        await self.log_access(user_id, 'show_main_menu')
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        keyboard = [
            [KeyboardButton(self.BUTTON_COORD_SEARCH)],
            [KeyboardButton(self.BUTTON_DESC_SEARCH)]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        
        await update.message.reply_text(
            "üîç –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞:",
            reply_markup=reply_markup
        )
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await update.message.reply_text(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–∏—Å—Ç–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç."
        )
        
    async def handle_menu_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu
        
        Args:
            update: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
            
        Returns:
            States: –°–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
        """
        self.logger.info(f"[MenuHandler.handle_menu_command] –í—Ö–æ–¥: user_id={getattr(update.effective_user, 'id', None)}, text={getattr(update.message, 'text', None)}")
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            is_auth = await self.auth_handler.check_auth(update, context)
            self.logger.info(f"[MenuHandler.handle_menu_command] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: {is_auth}")
            if not is_auth:
                # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ auth_handler, –∑–¥–µ—Å—å –Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º
                return States.AUTH
            context.user_data['auth_prompted'] = False
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
            if update.message and update.message.text:
                choice = update.message.text
                if choice == self.BUTTON_COORD_SEARCH:
                    # –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ñ–æ—Ä–º–∞—Ç–∞–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
                    keyboard = [[KeyboardButton(self.BUTTON_MENU)]]
                    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
                    await update.message.reply_text(
                        "üìç –í–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ 'latitude;longitude' –∏–ª–∏ 'latitude$longitude' –∏–ª–∏ 'latitude%longitude'\n\n"
                        "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –≤–≤–æ–¥–∞:\n"
                        "1. –î–µ—Å—è—Ç–∏—á–Ω—ã–µ –≥—Ä–∞–¥—É—Å—ã: 55.7558;37.6173 –∏–ª–∏ 55.7558$37.6173 –∏–ª–∏ 55.7558%37.6173\n"
                        "2. –ì—Ä–∞–¥—É—Å—ã –∏ –º–∏–Ω—É—Ç—ã: 55 45.348;37 37.038 –∏–ª–∏ 55 45.348$37 37.038 –∏–ª–∏ 55 45.348%37 37.038\n"
                        "3. –ì—Ä–∞–¥—É—Å—ã, –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã: 55 45 20.88;37 37 2.28 –∏–ª–∏ 55 45 20.88$37 37 2.28 –∏–ª–∏ 55 45 20.88%37 37 2.28\n"
                        "4. –° –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è–º–∏: 55¬∞45'20.88\";37¬∞37'2.28\" –∏–ª–∏ 55¬∞45'20.88\"$37¬∞37'2.28\" –∏–ª–∏ 55¬∞45'20.88\"%37¬∞37'2.28\"\n\n"
                        "–†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É —à–∏—Ä–æ—Ç–æ–π –∏ –¥–æ–ª–≥–æ—Ç–æ–π - —Ç–æ—á–∫–∞ —Å –∑–∞–ø—è—Ç–æ–π (;) –∏–ª–∏ –∑–Ω–∞–∫ –¥–æ–ª–ª–∞—Ä–∞ ($) –∏–ª–∏ –∑–Ω–∞–∫ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ (%)",
                        reply_markup=reply_markup
                    )
                    return States.COORD_INPUT
                elif choice == self.BUTTON_DESC_SEARCH:
                    keyboard = [[KeyboardButton(self.BUTTON_MENU)]]
                    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
                    await update.message.reply_text(
                        "üîç –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–∏—Å–∫–æ–º:\n\n"
                        "1. –ü–æ–∏—Å–∫ –ø–æ SRID:\n"
                        "   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Å–∏—Å—Ç–µ–º—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç\n"
                        "   - –ü—Ä–∏–º–µ—Ä: 100000\n\n"
                        "2. –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é:\n"
                        "   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è\n"
                        "   - –ü—Ä–∏–º–µ—Ä: MSK01z1\n\n"
                        "3. –ü–æ–∏—Å–∫ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é:\n"
                        "   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∞—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏—è\n"
                        "   - –ü—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–æ–≤—Å–∫–∞—è, Moskovskaya\n\n"
                        "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏:\n"
                        "- –°–Ω–∞—á–∞–ª–∞ —Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è\n"
                        "- –ó–∞—Ç–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è",
                        reply_markup=reply_markup
                    )
                    # Inline-–∫–Ω–æ–ø–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
                    inline_keyboard = [[
                        InlineKeyboardButton(
                            "üîç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ",
                            switch_inline_query_current_chat=""
                        )
                    ]]
                    inline_markup = InlineKeyboardMarkup(inline_keyboard)
                    await update.message.reply_text(
                        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞:",
                        reply_markup=inline_markup
                    )
                    return States.SEARCH_INPUT
                elif choice == self.BUTTON_MENU:
                    await self.show_main_menu(update, context)
                    return States.MAIN_MENU
            # –ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏—á–µ–≥–æ ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await self.show_main_menu(update, context)
            return States.MAIN_MENU
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /menu: {e}")
            await self._handle_error(update, context, e)
            return States.ERROR
            
    async def handle_help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
        
        Args:
            update: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
            
        Returns:
            States: –°–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
        """
        try:
            help_text = (
                "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
                "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
                "/menu - –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
                "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
                "/search - –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫\n"
                "/export - –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n"
                "/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é\n"
                "/logout - –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"
            )
        
            await update.message.reply_text(help_text)
            return States.MAIN_MENU
            
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /help: {e}")
            await self._handle_error(update, context, e)
            return States.ERROR
            
    async def handle_cancel_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /cancel
        
        Args:
            update: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
            
        Returns:
            States: –°–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
        """
        try:
            # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await self.clear_user_state(context)
            
            await update.message.reply_text(
                "üîÑ –¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /menu –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
            )
            return States.MAIN_MENU
            
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /cancel: {e}")
            await self._handle_error(update, context, e)
            return States.ERROR

    async def handle_unknown_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.
        """
        user_id = update.effective_user.id if update.effective_user else "unknown"
        self.logger.info(f"[MenuHandler.handle_unknown_command] user_id={user_id}, text={update.message.text}")
        await update.message.reply_text(
            "ü§∑‚Äç‚ôÇÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã."
        )
        # –í–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–µ–Ω—é, –º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ,
        # —á—Ç–æ–±—ã ConversationHandler –º–æ–≥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ –Ω–µ–≥–æ —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å.
        # –ï—Å–ª–∏ —ç—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ fallback –¥—Ä—É–≥–æ–≥–æ ConversationHandler, —Ç–æ —Ç–æ—Ç –¥–æ–ª–∂–µ–Ω
        # –∏–º–µ—Ç—å MAIN_MENU –≤ map_to_parent –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –µ–≥–æ.
        await self.show_main_menu(update, context) # –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∂–µ–º –º–µ–Ω—é
        return States.MAIN_MENU # –ó–∞—Ç–µ–º –≤–µ—Ä–Ω–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """
        –ü—É–±–ª–∏—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ BotManager
        """
        self.logger.info(f"[MenuHandler.start] –í—Ö–æ–¥: user_id={getattr(update.effective_user, 'id', None)}, text={getattr(update.message, 'text', None)}")
        try:
            # –≠—Ç–æ—Ç –≤—ã–∑–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–µ–π –≤ –±–ª–æ–∫–µ try
            return await self.handle_menu_command(update, context)
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /menu: {str(e)} ({type(e).__name__})", exc_info=True)
            error_message_text = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start."
            try:
                # –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ callback_query, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                if update.callback_query and update.callback_query.message:
                    await update.callback_query.message.reply_text(error_message_text)
                # –ò–Ω–∞—á–µ, –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä—è–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ö–æ—Ç—è –≤ –¥–∞–Ω–Ω–æ–º –ø–æ—Ç–æ–∫–µ –µ–≥–æ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –Ω–µ—Ç)
                elif update.message:
                    await update.message.reply_text(error_message_text)
                # –ö–∞–∫ –∫—Ä–∞–π–Ω–∏–π —Å–ª—É—á–∞–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
                elif update.effective_chat:
                    await context.bot.send_message(chat_id=update.effective_chat.id, text=error_message_text)
                else:
                    # –ï—Å–ª–∏ –Ω–µ–∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
                    self.logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ MenuHandler.start: –Ω–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞.")
            except Exception as send_e:
                self.logger.error(f"–¢–∞–∫–∂–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ MenuHandler.start: {send_e}", exc_info=True)
            return States.ERROR

    async def help(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """
        –ü—É–±–ª–∏—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ BotManager
        """
        return await self.handle_help_command(update, context)

    async def cancel(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """
        –ü—É–±–ª–∏—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cancel –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ BotManager
        """
        return await self.handle_cancel_command(update, context)

    async def handle_menu(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """
        –ü—É–±–ª–∏—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –≤ ConversationHandler
        """
        return await self.handle_menu_command(update, context)

    async def show_main_menu_and_return_state(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> States:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ MAIN_MENU. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ fallbacks."""
        await self.show_main_menu(update, context)
        return States.MAIN_MENU