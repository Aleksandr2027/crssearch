"""
Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–æ—Ç–∞
"""

from telegram import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict, Any

class InlineKeyboard:
    """Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±–æ—Ç–∞"""
    
    def create_inline_keyboard(
        self,
        buttons: List[List[Dict[str, Any]]],
        row_width: int = 3
    ) -> InlineKeyboardMarkup:
        """
        –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        
        Args:
            buttons: –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ [{"text": "text", "callback_data": "data"}]
            row_width: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ
            
        Returns:
            –û–±—ä–µ–∫—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        """
        keyboard = []
        row = []
        
        for button in buttons:
            if len(row) >= row_width:
                keyboard.append(row)
                row = []
            row.append(
                InlineKeyboardButton(
                    text=button["text"],
                    callback_data=button.get("callback_data"),
                    url=button.get("url"),
                    switch_inline_query=button.get("switch_inline_query"),
                    switch_inline_query_current_chat=button.get("switch_inline_query_current_chat")
                )
            )
            
        if row:
            keyboard.append(row)
            
        return InlineKeyboardMarkup(keyboard)
    
    def get_search_keyboard(self) -> InlineKeyboardMarkup:
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
        
        Returns:
            –û–±—ä–µ–∫—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        """
        buttons = [[{
            'text': 'üîç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ',
            'switch_inline_query_current_chat': ''
        }]]
        return self.create_inline_keyboard(buttons)
    
    def get_export_keyboard(self, srid: int) -> InlineKeyboardMarkup:
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —ç–∫—Å–ø–æ—Ä—Ç–∞
        
        Args:
            srid: SRID —Å–∏—Å—Ç–µ–º—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
            
        Returns:
            –û–±—ä–µ–∫—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        """
        buttons = [[
            {
                'text': 'xml_Civil3D',
                'callback_data': f'export_xml:{srid}'
            },
            {
                'text': 'prj_GMv20',
                'callback_data': f'export_gmv20:{srid}'
            },
            {
                'text': 'prj_GMv25',
                'callback_data': f'export_gmv25:{srid}'
            }
        ]]
        return self.create_inline_keyboard(buttons) 