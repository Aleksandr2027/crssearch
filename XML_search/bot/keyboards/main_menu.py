"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
"""

from typing import Dict
from telegram import ReplyKeyboardMarkup, KeyboardButton
from .base import BaseKeyboard, KeyboardResult

class MainMenuKeyboard(BaseKeyboard):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    
    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
    BUTTONS: Dict[str, str] = {
        'coord_search': '–ü–æ–∏—Å–∫ –°–ö –ø–æ Lat/Lon',
        'desc_search': '–ü–æ–∏—Å–∫ –°–ö –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é',
        'menu': 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    }
    
    def build(self, **kwargs) -> KeyboardResult:
        """
        –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        
        Returns:
            –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        """
        try:
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
            buttons = [
                [KeyboardButton(self.BUTTONS['coord_search'])],
                [KeyboardButton(self.BUTTONS['desc_search'])]
            ]
            
            # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
            if not self._validate_buttons(buttons):
                raise ValueError("–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫")
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            keyboard = ReplyKeyboardMarkup(
                buttons,
                resize_keyboard=True,
                one_time_keyboard=False
            )
            
            # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
            self._track_build('main_menu')
            
            return KeyboardResult(
                keyboard=keyboard,
                metadata={'type': 'main_menu'}
            )
            
        except Exception as e:
            self._track_build('main_menu', success=False)
            raise ValueError(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}") 