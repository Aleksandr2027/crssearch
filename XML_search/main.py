"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import os
import sys
import signal
import logging
import asyncio
from XML_search.bot.bot_manager import BotManager
from XML_search.bot.config import BotConfig
from typing import Optional

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∞–∫–æ–Ω–∏—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s [%(levelname)s] %(name)s: %(message)s'
)

# –û—Ç–∫–ª—é—á–∞–µ–º –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ –ª–æ–≥–∏ –æ—Ç —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
logging.getLogger('telegram').setLevel(logging.WARNING)
logging.getLogger('telegram.ext').setLevel(logging.WARNING)
logging.getLogger('httpx').setLevel(logging.WARNING)
logging.getLogger('httpcore').setLevel(logging.WARNING)
logging.getLogger('urllib3').setLevel(logging.WARNING)

# –û—Ç–∫–ª—é—á–∞–µ–º PTB –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
import warnings
warnings.filterwarnings("ignore", category=UserWarning, module="telegram")

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –±–æ—Ç–∞
bot_manager_instance: Optional[BotManager] = None

async def main_logic():
    """–û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞."""
    global bot_manager_instance
    loop = asyncio.get_event_loop()

    config = BotConfig()
    config_path = os.getenv("XML_SEARCH_CONFIG", "XML_search/config/db_config.json")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º bot_manager_instance –∑–¥–µ—Å—å
    bot_manager_instance = BotManager(token=config.BOT_TOKEN, config_path=config_path)

    try:
        logging.info("üöÄ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –µ–≥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º
        await bot_manager_instance.run_bot_async_lifecycle()
        
    except (KeyboardInterrupt, SystemExit):
        logging.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª KeyboardInterrupt/SystemExit –≤ main_logic.")
    except Exception as e:
        logging.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main_logic: {e}", exc_info=True)
    finally:
        logging.info("–ë–ª–æ–∫ finally –≤ main_logic: –Ω–∞—á–∏–Ω–∞—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É –±–æ—Ç–∞...")
        if bot_manager_instance:
            # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ stop –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –¥–∞–∂–µ –µ—Å–ª–∏ run_in_executor –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ
            # –∏–ª–∏ –µ—Å–ª–∏ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–∞.
            if hasattr(bot_manager_instance, 'application') and hasattr(bot_manager_instance.application, 'running') and bot_manager_instance.application.running:
                 logging.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –í—ã–∑–æ–≤ await bot_manager_instance.stop()...")
            elif not (hasattr(bot_manager_instance, 'application') and hasattr(bot_manager_instance.application, 'running')):
                 logging.info("–≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –µ–≥–æ —Å—Ç–∞—Ç—É—Å 'running' –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–æ bot_manager —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã–∑–æ–≤ await bot_manager_instance.stop() –¥–ª—è –æ—á–∏—Å—Ç–∫–∏.")
            else:
                 logging.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ, –Ω–æ bot_manager —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã–∑–æ–≤ await bot_manager_instance.stop() –¥–ª—è –æ—á–∏—Å—Ç–∫–∏.")

            await bot_manager_instance.stop()
            logging.info("bot_manager_instance.stop() –∑–∞–≤–µ—Ä—à–µ–Ω.")
        else:
            logging.warning("–≠–∫–∑–µ–º–ø–ª—è—Ä bot_manager_instance –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∫ –º–æ–º–µ–Ω—Ç—É finally.")
        logging.info("–ë–ª–æ–∫ finally –≤ main_logic –∑–∞–≤–µ—Ä—à–µ–Ω.")

if __name__ == "__main__":
    if sys.platform.startswith('win'):
        asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
    
    try:
        asyncio.run(main_logic())
    except KeyboardInterrupt:
        # –≠—Ç–æ—Ç –±–ª–æ–∫ –æ–±—ã—á–Ω–æ –Ω–µ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è, –µ—Å–ª–∏ asyncio.run() –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç SIGINT
        # –∏ –≤—ã–∑—ã–≤–∞–µ—Ç CancelledError –≤ main_logic.
        # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ö–æ–≤–∫—É.
        logging.info("KeyboardInterrupt (Ctrl+C) –ø–æ–π–º–∞–Ω –≤ __main__. "
                     "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ –±–ª–æ–∫–µ finally —Ñ—É–Ω–∫—Ü–∏–∏ main_logic.")
    except Exception as e: 
        logging.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ asyncio.run: {e}", exc_info=True)
    finally:
        logging.info("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.") 